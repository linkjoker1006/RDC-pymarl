# --- QMIX specific parameters ---

# use epsilon greedy action selector
action_selector: "epsilon_greedy"
epsilon_start: 1.0
epsilon_finish: 0.05
epsilon_anneal_time: 100000 # 500000 for 6h_vs_8z

runner: "parallel"
batch_size_run: 8 # batch_size_run=4, buffer_size = 2500, batch_size=64  for 3s5z_vs_3s6z
buffer_size: 5000 
batch_size: 128
predictor_batch_size: 4

t_max: 12050000

# update the target network every {} episodes
target_update_interval: 200

# use the Q_Learner to train
mac: "pd_mac"
agent: "n_rnn"
agent_output_type: q

learner: "pd_nq_learner"
mixer: "qmix"
mixing_embed_dim: 32
hypernet_embed: 64
lr: 0.001 # Learning rate for agents
pd_lr: 0.001
reg_lr: 0.001
cla_lr: 0.001
td_lambda: 0.6 # 0.3 for 6h_vs_8z
optimizer: 'adam'
q_lambda: False
predictor_checkpoint_path: ""
rl_checkpoint_path: ""
cheating_start_value: 1.0
cheating_end_value: 0.0
cheating_start_time: 4000000
cheating_end_time: 9000000
# 预测器模式：none, single_step, multi_step
predictor_mode: "none"
pd_hidden_dim: 64
pd_hyper_dim: 128
one_hot_delay: False
delay_aware: True

# transformer
hidden_dim: 512
num_heads: 4
num_layers: 3
seq_length: 10

# rnn layer normalization
use_layer_norm: False

# orthogonal init for DNN
use_orthogonal: False
gain: 0.01

# Priority experience replay
use_per: False
per_alpha: 0.6
per_beta: 0.4
return_priority: False

#name: "qmix_env=8_adam_td_lambda"
name: "pd_qmix"